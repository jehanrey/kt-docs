---
import { type CollectionEntry, getCollection, render } from 'astro:content'
import dayjs from 'dayjs'

import Post from '@/layouts/post.astro'

export async function getStaticPaths() {
  const ssoEntries = await getCollection('sso')
  return ssoEntries.map((entry) => {
    return {
      params: { id: entry.id },
      props: { entry },
    }
  })
}

interface Props {
  entry: CollectionEntry<'sso'>
}

const entry = Astro.props.entry
const { Content, remarkPluginFrontmatter, headings } = await render(entry)

const lastModified = (() => {
  const commitDate = dayjs(remarkPluginFrontmatter.lastModified)
  return (commitDate.isValid() ? commitDate : dayjs()).format(
    'HH:mm:ss YYYY MMM DD',
  )
})()
---

<Post
  title={entry.data.title}
  minutesRead={remarkPluginFrontmatter.minutesRead}
  lastModified={lastModified}
  headings={headings.filter(({ depth }) => depth <= 2)}
>
  <Content />
</Post>
